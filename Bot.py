import telebot
from telebot import types

API_TOKEN = '6692785864:AAEqASjDj-9JcmIZKGOjCSgvXWXDv7E7KaY'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(API_TOKEN)

# –î–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫–∞—É–Ω—Ç–∞—Ö, –≤–∏—Ä—Ç–∞—Ö –∏ –∫–µ–π—Å–∞—Ö
accounts = {
    10: {"price": 1000, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 10, –º–∞—à–∏–Ω–∞: –ó–ê–ó 968", "car": "–ó–ê–ó 968"},
    11: {"price": 1200, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 11, –º–∞—à–∏–Ω–∞: –í–ê–ó 2101", "car": "–í–ê–ó 2101"},
    12: {"price": 1400, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 12, –º–∞—à–∏–Ω–∞: –í–ê–ó 2107", "car": "–í–ê–ó 2107"},
    13: {"price": 1600, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 13, –º–∞—à–∏–Ω–∞: –í–ê–ó 2110", "car": "–í–ê–ó 2110"},
    14: {"price": 1800, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 14, –º–∞—à–∏–Ω–∞: –í–ê–ó 2115", "car": "–í–ê–ó 2115"},
    15: {"price": 2000, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 15, –º–∞—à–∏–Ω–∞: –ö–∏–∞ –†–∏–æ", "car": "–ö–∏–∞ –†–∏–æ"},
    16: {"price": 2200, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 16, –º–∞—à–∏–Ω–∞: –•–µ–Ω–¥–∞–π –°–æ–ª—è—Ä–∏—Å", "car": "–•–µ–Ω–¥–∞–π –°–æ–ª—è—Ä–∏—Å"},
    17: {"price": 2400, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 17, –º–∞—à–∏–Ω–∞: –õ–∞–¥–∞ –í–µ—Å—Ç–∞", "car": "–õ–∞–¥–∞ –í–µ—Å—Ç–∞"},
    18: {"price": 2600, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 18, –º–∞—à–∏–Ω–∞: –ú–∏—Ü—É–±–∏—Å–∏ –õ–∞–Ω—Å–µ—Ä", "car": "–ú–∏—Ü—É–±–∏—Å–∏ –õ–∞–Ω—Å–µ—Ä"},
    19: {"price": 2800, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 19, –º–∞—à–∏–Ω–∞: –¢–æ–π–æ—Ç–∞ –ö–æ—Ä–æ–ª–ª–∞", "car": "–¢–æ–π–æ—Ç–∞ –ö–æ—Ä–æ–ª–ª–∞"},
    20: {"price": 3000, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 20, –º–∞—à–∏–Ω–∞: –•–æ–Ω–¥–∞ –¶–∏–≤–∏–∫", "car": "–•–æ–Ω–¥–∞ –¶–∏–≤–∏–∫"},
    21: {"price": 3200, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 21, –º–∞—à–∏–Ω–∞: –ê—É–¥–∏ –ê3", "car": "–ê—É–¥–∏ –ê3"},
    22: {"price": 3400, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 22, –º–∞—à–∏–Ω–∞: –ë–ú–í 3 —Å–µ—Ä–∏–∏", "car": "–ë–ú–í 3 —Å–µ—Ä–∏–∏"},
    23: {"price": 3600, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 23, –º–∞—à–∏–Ω–∞: –ú–µ—Ä—Å–µ–¥–µ—Å C-–∫–ª–∞—Å—Å", "car": "–ú–µ—Ä—Å–µ–¥–µ—Å C-–∫–ª–∞—Å—Å"},
    24: {"price": 3800, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 24, –º–∞—à–∏–Ω–∞: –õ–µ–∫—Å—É—Å IS", "car": "–õ–µ–∫—Å—É—Å IS"},
    25: {"price": 4000, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 25, –º–∞—à–∏–Ω–∞: –ò–Ω—Ñ–∏–Ω–∏—Ç–∏ Q50", "car": "–ò–Ω—Ñ–∏–Ω–∏—Ç–∏ Q50"},
    26: {"price": 4200, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 26, –º–∞—à–∏–Ω–∞: –ü–æ—Ä—à–µ –ü–∞–Ω–∞–º–µ—Ä–∞", "car": "–ü–æ—Ä—à–µ –ü–∞–Ω–∞–º–µ—Ä–∞"},
    27: {"price": 7000, "description": "–ê–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–µ–Ω—å 27, –º–∞—à–∏–Ω–∞: Bugatti La Noire", "car": "Bugatti La Noire"}
}

cases = {
    "–ë–æ–º–∂": 140,
    "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π": 200,
    "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π": 300,
    "–û—Å–æ–±—ã–π": 450,
    "–ö–µ–π—Å —Ö–∞ –ë–ª–µ–∫ –∫–æ–∏–Ω—ã": 700
}

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–ê–∫–∫–∞—É–Ω—Ç—ã"), types.KeyboardButton("–í–∏—Ä—Ç—ã"), types.KeyboardButton("–ö–µ–π—Å—ã"))
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:", reply_markup=markup)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text in ["–ê–∫–∫–∞—É–Ω—Ç—ã", "–í–∏—Ä—Ç—ã", "–ö–µ–π—Å—ã"])
def handle_menu(message):
    if message.text == "–ê–∫–∫–∞—É–Ω—Ç—ã":
        markup = types.InlineKeyboardMarkup()
        for level in range(10, 28):
            account = accounts[level]
            markup.add(types.InlineKeyboardButton(f"–£—Ä–æ–≤–µ–Ω—å {level}: {account['car']}", callback_data=f"account_{level}"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç:", reply_markup=markup)
    elif message.text == "–í–∏—Ä—Ç—ã":
        bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤–∏—Ä—Ç–æ–≤ (–º–∏–Ω 50 000, –º–∞–∫—Å 45 000 000):")
    elif message.text == "–ö–µ–π—Å—ã":
        markup = types.InlineKeyboardMarkup()
        for case, price in cases.items():
            markup.add(types.InlineKeyboardButton(f"{case}: {price} —Ä—É–±–ª–µ–π", callback_data=f"case_{case}"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å:", reply_markup=markup)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
@bot.callback_query_handler(lambda c: c.data.startswith('account_'))
def process_account(callback_query):
    level = int(callback_query.data.split('_')[1])
    account = accounts[level]
    message = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç —É—Ä–æ–≤–Ω—è {level}.\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {account['description']}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n"
        "1. –¢–µ–ª–µ–≥—Ä–∞–º –∫–æ—à–µ–ª–µ–∫ - UQC8Y2ZLGUJSmAasHTw_VNvO5jQ4w4OeJC_DQBO-wnqUItAL\n"
        "2. –ö–∞—Å–ø–∏ –±–∞–Ω–∫ - üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –Ω–∞ Kaspi Gold üî•:\n"
        "   ‚òéÔ∏è –ù–æ–º–µ—Ä: 4400 4302 6934 6638\n"
        "   üë®‚Äçüíª –ò–º—è - –î–∞–Ω–∏–ª –ì.\n"
        "   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–ï –ü–ò–°–ê–¢–¨!!!\n"
        "3. –°–ë–ü - –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ –∫–∞—Ä—Ç—É –†–û–°–°–ò–ò: 2200701089399395 –ê–∫–∏–º.\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ @doksformoney –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤"
    )
    bot.send_message(callback_query.from_user.id, message)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–µ–π—Å–∞
@bot.callback_query_handler(lambda c: c.data.startswith('case_'))
def process_case(callback_query):
    case = callback_query.data.split('_')[1]
    price = cases[case]
    message = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–µ–π—Å '{case}'.\n"
        f"–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n"
        "1. –¢–µ–ª–µ–≥—Ä–∞–º –∫–æ—à–µ–ª–µ–∫ - UQC8Y2ZLGUJSmAasHTw_VNvO5jQ4w4OeJC_DQBO-wnqUItAL\n"
        "2. –ö–∞—Å–ø–∏ –±–∞–Ω–∫ - üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –Ω–∞ Kaspi Gold üî•:\n"
        "   ‚òéÔ∏è –ù–æ–º–µ—Ä: 4400 4302 6934 6638\n"
        "   üë®‚Äçüíª –ò–º—è - –î–∞–Ω–∏–ª –ì.\n"
        "   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–ï –ü–ò–°–ê–¢–¨!!!\n"
        "3. –°–ë–ü - –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ –∫–∞—Ä—Ç—É –†–û–°–°–ò–ò: 2200701089399395 –ê–∫–∏–º.\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ @doksformoney –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤"
    )
    bot.send_message(callback_query.from_user.id, message)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –≤–∞–ª—é—Ç—ã
@bot.message_handler(func=lambda message: message.text.isdigit())
def process_virts(message):
    amount = int(message.text)
    if 50000 <= amount <= 45000000:
        price = (amount / 1000)  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π
        bot.send_message(
            message.chat.id,
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {amount} –≤–∏—Ä—Ç–æ–≤.\n"
            f"–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n"
            "1. –¢–µ–ª–µ–≥—Ä–∞–º –∫–æ—à–µ–ª–µ–∫ - UQC8Y2ZLGUJSmAasHTw_VNvO5jQ4w4OeJC_DQBO-wnqUItAL\n"
            "2. –ö–∞—Å–ø–∏ –±–∞–Ω–∫ - üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –Ω–∞ Kaspi Gold üî•:\n"
            "   ‚òéÔ∏è –ù–æ–º–µ—Ä: 4400 4302 6934 6638\n"
            "   üë®‚Äçüíª –ò–º—è - –î–∞–Ω–∏–ª –ì.\n"
            "   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–ï –ü–ò–°–ê–¢–¨!!!\n"
            "3. –°–ë–ü - –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞ –∫–∞—Ä—Ç—É –†–û–°–°–ò–ò: 2200701089399395 –ê–∫–∏–º.\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ @doksformoney –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤"
        )
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤–∏—Ä—Ç–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 50 000 –¥–æ 45 000 000.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(bot, skip_updates=True)
